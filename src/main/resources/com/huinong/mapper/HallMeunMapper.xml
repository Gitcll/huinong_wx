<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huinong.mapper.HallMeunMapper">
  <resultMap id="BaseResultMap" type="com.huinong.pojo.HallMeun">
    <id column="No" jdbcType="INTEGER" property="no" />
    <result column="meunname" jdbcType="VARCHAR" property="meunname" />
    <result column="deleteflg" jdbcType="INTEGER" property="deleteflg" />
    <result column="meunurl" jdbcType="VARCHAR" property="meunurl" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.huinong.pojo.HallMeun">
    <result column="meunimage" jdbcType="LONGVARBINARY" property="meunimage" />
  </resultMap>
  <sql id="Base_Column_List">
    No, meunname, deleteflg, meunurl
  </sql>
  <sql id="Blob_Column_List">
    meunimage
  </sql>
  <select id="selectByDeleteFlgKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hallmeun
    where
    deleteflg = #{deleteflg,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hallmeun
    where No = #{no,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hallmeun
    where No = #{no,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.huinong.pojo.HallMeun">
    insert into hallmeun (No, meunname, deleteflg, 
      meunurl, meunimage)
    values (#{no,jdbcType=INTEGER}, #{meunname,jdbcType=VARCHAR}, #{deleteflg,jdbcType=INTEGER}, 
      #{meunurl,jdbcType=VARCHAR}, #{meunimage,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.huinong.pojo.HallMeun">
    insert into hallmeun
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="no != null">
        No,
      </if>
      <if test="meunname != null">
        meunname,
      </if>
      <if test="deleteflg != null">
        deleteflg,
      </if>
      <if test="meunurl != null">
        meunurl,
      </if>
      <if test="meunimage != null">
        meunimage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="no != null">
        #{no,jdbcType=INTEGER},
      </if>
      <if test="meunname != null">
        #{meunname,jdbcType=VARCHAR},
      </if>
      <if test="deleteflg != null">
        #{deleteflg,jdbcType=INTEGER},
      </if>
      <if test="meunurl != null">
        #{meunurl,jdbcType=VARCHAR},
      </if>
      <if test="meunimage != null">
        #{meunimage,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huinong.pojo.HallMeun">
    update hallmeun
    <set>
      <if test="meunname != null">
        meunname = #{meunname,jdbcType=VARCHAR},
      </if>
      <if test="deleteflg != null">
        deleteflg = #{deleteflg,jdbcType=INTEGER},
      </if>
      <if test="meunurl != null">
        meunurl = #{meunurl,jdbcType=VARCHAR},
      </if>
      <if test="meunimage != null">
        meunimage = #{meunimage,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where No = #{no,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.huinong.pojo.HallMeun">
    update hallmeun
    set meunname = #{meunname,jdbcType=VARCHAR},
      deleteflg = #{deleteflg,jdbcType=INTEGER},
      meunurl = #{meunurl,jdbcType=VARCHAR},
      meunimage = #{meunimage,jdbcType=LONGVARBINARY}
    where No = #{no,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huinong.pojo.HallMeun">
    update hallmeun
    set meunname = #{meunname,jdbcType=VARCHAR},
      deleteflg = #{deleteflg,jdbcType=INTEGER},
      meunurl = #{meunurl,jdbcType=VARCHAR}
    where No = #{no,jdbcType=INTEGER}
  </update>
</mapper>